#BlueJ class context
comment0.target=Quick
comment0.text=\r\n\ \ The\ {@code\ Quick}\ class\ provides\ static\ methods\ for\ sorting\ an\r\n\ \ array\ and\ selecting\ the\ ith\ smallest\ element\ in\ an\ array\ using\ quicksort.\r\n\ \ <p>\r\n\ \ For\ additional\ documentation,\ see\ <a\ href\="https\://algs4.cs.princeton.edu/21elementary">Section\ 2.1</a>\ of\r\n\ \ <i>Algorithms,\ 4th\ Edition</i>\ by\ Robert\ Sedgewick\ and\ Kevin\ Wayne.\r\n\r\n\ \ @author\ Robert\ Sedgewick\r\n\ \ @author\ Kevin\ Wayne\r\n
comment1.params=
comment1.target=Quick()
comment10.params=a
comment10.target=void\ show(java.lang.Comparable[])
comment11.params=args
comment11.target=void\ main(java.lang.String[])
comment11.text=\r\n\ Reads\ in\ a\ sequence\ of\ strings\ from\ standard\ input;\ quicksorts\ them;\ \r\n\ and\ prints\ them\ to\ standard\ output\ in\ ascending\ order.\ \r\n\ Shuffles\ the\ array\ and\ then\ prints\ the\ strings\ again\ to\r\n\ standard\ output,\ but\ this\ time,\ using\ the\ select\ method.\r\n\r\n\ @param\ args\ the\ command-line\ arguments\r\n
comment2.params=a
comment2.target=void\ sort(java.lang.Comparable[])
comment2.text=\r\n\ Rearranges\ the\ array\ in\ ascending\ order,\ using\ the\ natural\ order.\r\n\ @param\ a\ the\ array\ to\ be\ sorted\r\n
comment3.params=a\ lo\ hi
comment3.target=void\ sort(java.lang.Comparable[],\ int,\ int)
comment4.params=a\ lo\ hi
comment4.target=int\ partition(java.lang.Comparable[],\ int,\ int)
comment5.params=a\ k
comment5.target=java.lang.Comparable\ select(java.lang.Comparable[],\ int)
comment5.text=\r\n\ Rearranges\ the\ array\ so\ that\ {@code\ a[k]}\ contains\ the\ kth\ smallest\ key;\r\n\ {@code\ a[0]}\ through\ {@code\ a[k-1]}\ are\ less\ than\ (or\ equal\ to)\ {@code\ a[k]};\ and\r\n\ {@code\ a[k+1]}\ through\ {@code\ a[n-1]}\ are\ greater\ than\ (or\ equal\ to)\ {@code\ a[k]}.\r\n\r\n\ @param\ \ a\ the\ array\r\n\ @param\ \ k\ the\ rank\ of\ the\ key\r\n\ @return\ the\ key\ of\ rank\ {@code\ k}\r\n\ @throws\ IllegalArgumentException\ unless\ {@code\ 0\ <\=\ k\ <\ a.length}\r\n
comment6.params=v\ w
comment6.target=boolean\ less(java.lang.Comparable,\ java.lang.Comparable)
comment6.text=\r\n\ \ Helper\ sorting\ functions.\r\n
comment7.params=a\ i\ j
comment7.target=void\ exch(java.lang.Object[],\ int,\ int)
comment8.params=a
comment8.target=boolean\ isSorted(java.lang.Comparable[])
comment8.text=\r\n\ \ Check\ if\ array\ is\ sorted\ -\ useful\ for\ debugging.\r\n
comment9.params=a\ lo\ hi
comment9.target=boolean\ isSorted(java.lang.Comparable[],\ int,\ int)
numComments=12
