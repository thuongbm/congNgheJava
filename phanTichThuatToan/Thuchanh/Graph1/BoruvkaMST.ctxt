#BlueJ class context
comment0.target=BoruvkaMST
comment0.text=\r\n\ \ The\ {@code\ BoruvkaMST}\ class\ represents\ a\ data\ type\ for\ computing\ a\r\n\ \ <em>minimum\ spanning\ tree</em>\ in\ an\ edge-weighted\ graph.\r\n\ \ The\ edge\ weights\ can\ be\ positive,\ zero,\ or\ negative\ and\ need\ not\r\n\ \ be\ distinct.\ If\ the\ graph\ is\ not\ connected,\ it\ computes\ a\ <em>minimum\r\n\ \ spanning\ forest</em>,\ which\ is\ the\ union\ of\ minimum\ spanning\ trees\r\n\ \ in\ each\ connected\ component.\ The\ {@code\ weight()}\ method\ returns\ the\ \r\n\ \ weight\ of\ a\ minimum\ spanning\ tree\ and\ the\ {@code\ edges()}\ method\r\n\ \ returns\ its\ edges.\r\n\ \ <p>\r\n\ \ This\ implementation\ uses\ <em>Boruvka's\ algorithm</em>\ and\ the\ union-find\r\n\ \ data\ type.\r\n\ \ The\ constructor\ takes\ time\ proportional\ to\ <em>E</em>\ log\ <em>V</em>\r\n\ \ and\ extra\ space\ (not\ including\ the\ graph)\ proportional\ to\ <em>V</em>,\r\n\ \ where\ <em>V</em>\ is\ the\ number\ of\ vertices\ and\ <em>E</em>\ is\ the\ number\ of\ edges.\r\n\ \ Afterwards,\ the\ {@code\ weight()}\ method\ takes\ constant\ time\r\n\ \ and\ the\ {@code\ edges()}\ method\ takes\ time\ proportional\ to\ <em>V</em>.\r\n\ \ <p>\r\n\ \ For\ additional\ documentation,\r\n\ \ see\ <a\ href\="https\://algs4.cs.princeton.edu/43mst">Section\ 4.3</a>\ of\r\n\ \ <i>Algorithms,\ 4th\ Edition</i>\ by\ Robert\ Sedgewick\ and\ Kevin\ Wayne.\r\n\ \ For\ alternate\ implementations,\ see\ {@link\ LazyPrimMST},\ {@link\ PrimMST},\r\n\ \ and\ {@link\ KruskalMST}.\r\n\r\n\ \ @author\ Robert\ Sedgewick\r\n\ \ @author\ Kevin\ Wayne\r\n
comment1.params=
comment1.target=java.lang.Iterable\ edges()
comment1.text=\r\n\ Returns\ the\ edges\ in\ a\ minimum\ spanning\ tree\ (or\ forest).\r\n\ @return\ the\ edges\ in\ a\ minimum\ spanning\ tree\ (or\ forest)\ as\r\n\ \ \ \ an\ iterable\ of\ edges\r\n
comment2.params=
comment2.target=double\ weight()
comment2.text=\r\n\ Returns\ the\ sum\ of\ the\ edge\ weights\ in\ a\ minimum\ spanning\ tree\ (or\ forest).\r\n\ @return\ the\ sum\ of\ the\ edge\ weights\ in\ a\ minimum\ spanning\ tree\ (or\ forest)\r\n
comment3.params=e\ f
comment3.target=boolean\ less(Edge,\ Edge)
comment4.params=args
comment4.target=void\ main(java.lang.String[])
comment4.text=\r\n\ Unit\ tests\ the\ {@code\ BoruvkaMST}\ data\ type.\r\n\r\n\ @param\ args\ the\ command-line\ arguments\r\n
numComments=5
